#아이폰 개발 공부하기
2021년 01월 06일

#주제 - 스위프트 기본 문법 #야곰

14강 열거형 (enum)


//MARK: - 정의

//enum은 타입이므로 대문자 카멜케이스를 사용하여 이름을 정의한다
//각 case는 소문자 카멜케이스로 정의한다
//각 case는 그 자체가 고유의 값이다

//enum 이름 {
//    case 이름1
//    case 이름2
//    case 이름3, 이름4, 이름5
//    ...
//}

//MARK: 열거형 사용

enum Weekday {
    case mon
    case tue
    case Wed
    case thu, fri, sat, sun
}

car day: Weekday = Weekday.mon
day = .tue

print(day)

switch day {
    case .mon, .tue, .wed, .thu:
        print("평일입니다")
    case Weekday.fri:
        print("불금 파티!!")
    case .sat, .sun:
        print("신나는 주말!!")
}


//MARK: - 원시값

//C 언어의 enum처럼 정수값을 가질 수도 있다
//rawValue를 사용하면 된다
//case별로 각각 다른 값을 가져야한다

enum Fruit: Int {
    case apple = 0
    case grape = 1
    case peach
    //case mango = 0 // 이 값은 중복되므로 오류가 발생한다
}

print("Fruit.peach.rawValue == \(Fruit.peach.rawValue)")
// Fruit.peach.rawValue == 2

//정수 타입 뿐만 아니아
//Hashable 프로토콜을 따르는 모든 타입이 원시값의 타입으로 지정될 수 있다

enum School: String {
    case elementary = "초등"
    case middle = "중든"
    case high = "고등"
    case university
}

print("School.middle.rawValue == \(School.middle.rawValue)")
// School.middle.rawValue == 중등

print("School.university.rawValue == \(School.university.rawValue)")
// School.university.rawValue == university


//MARK: 원시값을 통한 초기화

//rawValue를 통해 초기화 할 수 있다
//rawValue가 case에 해당하지 않을 수 있으므로
//rawValue를 통해 초기화한 인스턴스 옵셔널 타입이다

//let apple: Fruit = Fruit(rawValue: 0)  // 위에서 3이상의 값을 넣어두지 않았기 떄문에 오류가 발생하여 옵셔널을 사용하여
                                         // 꺼낼 수 있다 (if let 사용)
let apple: Fruit? = Fruit(rawValue: 0)

if let orange: Fruit = Fruit(rawValue: 5) {
    print("rawValue 5에 해당하는 케이스는 \(orange)입니다")
} else {
    print("rawValue 5에 해당하는 케이스가 없습니다")
} // rawValue 5에 해달하는 케이스가 없습니다


//MARK: 메서드

enum Month {
    case dec, jan, feb
    case mar, apr, may
    case jun, jul, aug
    case sep, oct, nov

    func prinMessage() {
        swich self {
            case .mar, .apr, .may:
                print("봄")
            case .jun, .july .aug:
                print("여름")
            case .sep, oct, nov:
                print("가을")
            case .dec, .jan, .feb:
                print("겨울")
        }
    }
}

Month.mar.printMessage() // 봄