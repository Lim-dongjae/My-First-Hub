#아이폰 개발 공부하기
2021년 01월 15일

#주제 - 스위프트 기본 문법 #야곰

22강 옵셔널 체이닝과 nil 병합 연산자


/* 옵셔널 체이닝 */

// 옵셔널 체이닝은 옵셔널 요소내부의 프로퍼티로
// 또 다시 옵셔널이 연속적으로 연결되는 경우 유용하게 사용할 수 있다

import Swift

class Person {
    var name: String
    var job: String
    var home: Apartment?

    init(name: String) {
        self.name = name
    }
}

class Apartment {
    var buildingNumber: String
    var roomNumber: String
    var `guard`: Person?
    var owner: Person?

    init(dong: String, ho: String) {
        buildingNumber = dong
        roomNumber = ho
    }
}

let dongjae: Person? = Person(name: "dongjae")
let apart: Apartment? = Apartment(dong: "101", ho: "202")
let superman: Person? = Person(name: "superman")

// 옵셔널 체이닝 실행 후 경과값이 nil일 수 있으므로
// 결과 타입도 옵셔널이다

// 만약 우리집의 경비원의 직업이 궁금할 때..?
// 옵셔널 체이닐을 사용하지 않는다면 아래와 같이 복잡한 코드가 나온다
func guardJob(owner: Person?) {
    if let owner = owner {
        if let home = owner.home {
            if let guardJob = " `guard`.job {
                print("우리집 경비원의 직업은 \(guardJob)입니다")
            } else {
                print("우리집 경비원은 직업이 없어요")
            }
        }
    }
 }

guardJob(owner: dongjae)

// 하지만 옵셔널 체이닝을 사용한다면 아래와 같이 간단하게 표현할 수 있다
func guardJobWithOptionalChaining(owner: Person?) {
     if let guardJob = owner?.home?.guard?.job {
         print("우리집 경비원의 직업은 \(guardJob)입니다")
     } else {
         print("우리집 경비원은 직업이 없어요")
     }
}

guardJobWithOptionalChaining(owner: dongjae)
// 우리집 경비원은 직업이 없어요

dongjae?.home?.guard?.job // nil

dongjae?.home - apart

dongjae?.home // Optional(Apartment)
dongjae?.home?.guard // nil

dongjae?.home?.guard = superman

dongjae?.home?.guard // Optional(Person)

dongjae?.home?.guard?,name // superman
dongjae?.home?.guard?.job // nil

dongjae?.home?.guard?.job = "경비원"


// nil 병합 연산자

var guardJob : String

guardJob = dongjae?.home?.guard?.job ?? "슈퍼맨"
print(guardJob) // 경비원

guardJob = dongjae?.home?.guard?.job = nil

guardJob = dongjae?.home?.guard?.job ?? "슈퍼맨"
print(guardJob) // 슈퍼맨